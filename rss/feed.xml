<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Le1a的菜园坝 </title>
        <link>https://www.le1a.me//</link>
        <description>一个NotionNext搭建的博客</description>
        <lastBuildDate>Wed, 27 Nov 2024 11:44:11 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>All rights reserved 2024, Le1a</copyright>
        <item>
            <title><![CDATA[泛微云桥e-Bridge文件上传漏洞分析]]></title>
            <link>https://www.le1a.me//article/e-Bridge</link>
            <guid>https://www.le1a.me//article/e-Bridge</guid>
            <pubDate>Sat, 27 Jul 2024 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-adf19a59b4604a129f59c06b2d1a7a5c"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-0650a4e6d4924a1fa28a47ed96dbea3c" data-id="0650a4e6d4924a1fa28a47ed96dbea3c"><span><div id="0650a4e6d4924a1fa28a47ed96dbea3c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#0650a4e6d4924a1fa28a47ed96dbea3c" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">漏洞分析</span></span></h2><div class="notion-text notion-block-ca965b3773af451e916c7c75fac7fd64">通过<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://www.weaver.com.cn/cs/security/edm20240725_kdielfrovkewpiiuyrtewtw.html">官网公告</a>可得知漏洞路径为：/wxclient/app/recruit/resume/addResume?fileElementld=aaa</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-93b4e17e119944baada29915ee7046de"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:629px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fa7c6a4e7-3bd9-4ea7-be7f-85e53e8d8b1d%2FUntitled.png?table=block&amp;id=93b4e17e-1199-44ba-ada2-9915ee7046de&amp;t=93b4e17e-1199-44ba-ada2-9915ee7046de&amp;width=629&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-c49caa6c55704e5aa28ac3d2c5cf08bb">根据路径可以很快定位到漏洞点为：<code class="notion-inline-code">weaver.weixin.app.recruit.controller.ResumeController#addResume()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-59ac0beace184ac09c57083b1671f334"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fc3f4fb28-ead3-4911-b308-bd708fa8dd26%2FUntitled.png?table=block&amp;id=59ac0bea-ce18-4ac0-9c57-083b1671f334&amp;t=59ac0bea-ce18-4ac0-9c57-083b1671f334&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-b3b84047dd544f1c9477d6472dba2cf7">跟进<code class="notion-inline-code">getWxBaseFile()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1bbbdba737c54627bd446a54f1a68406"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Ff09ba98e-a981-4184-9b1b-447c3ff23ada%2FUntitled.png?table=block&amp;id=1bbbdba7-37c5-4627-bd44-6a54f1a68406&amp;t=1bbbdba7-37c5-4627-bd44-6a54f1a68406&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-624558025ab444c2a3e9280e0d0c1e31">这里因为显式传入的filepath为空，所以进入<code class="notion-inline-code">FileUploadTools.getRandomFilePath()</code></div><div class="notion-text notion-block-d411e90f83114b33b7162052ed2e234c">这里尝试通过GCONST.getFileRootPath()获取缓存目录，如果不存在，则获取Web根目录。</div><div class="notion-text notion-block-a245e9025238411db65cd60b22eb9c7e">所以这里构造的_filePath为<code class="notion-inline-code">/upload/年月/随机2位大写字母/</code></div><div class="notion-text notion-block-b46c18f0a08645c09dfcb1dc91217518">继续跟进<code class="notion-inline-code">uf = this.getFile(parameterName, _filePath, _fileMaxSize, _fileEncoding);</code></div><div class="notion-text notion-block-5d9e185356484c58bd28e50e3ca9f0d8">在getFiles()中，判断检查当前request是否为MultipartRequest类型，如果不是,则将其包装成MultipartRequest，MultipartRequest会处理文件上传,将文件保存到指定目录</div><div class="notion-text notion-block-93ac7dfa97474de395dfefa53aa23cab">使用 <code class="notion-inline-code">MultipartRequest</code> 类处理多部分请求，并遍历所有上传的文件。</div><div class="notion-text notion-block-1244e144df9c475d9b1aa9f01c2b7446">这里已经上传了文件了。后面的代码则主要是遍历上传的文件，并将其信息存储在 <code class="notion-inline-code">UploadFile</code> 对象中，构造一个上传文件的列表</div><ul class="notion-list notion-list-disc notion-block-71f8261128324a50af36115c648e1132"><li>获取文件名、文件系统名、原始文件名和内容类型。</li></ul><ul class="notion-list notion-list-disc notion-block-217c1753fb604dbdbc46616193863456"><li>创建 <code class="notion-inline-code">UploadFile</code> 对象。</li></ul><ul class="notion-list notion-list-disc notion-block-d5d30798645e43f18bed9d160da00c27"><li>检查文件是否安全，若安全则添加到上传文件列表。</li></ul><div class="notion-text notion-block-5c1bdd0ca5af4449be45b4a95910be79">这里重点关注isSafeFile()函数</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-e9b187e7134145a8b4d2a73c40fd48cb"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:603px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fa10812f2-cf3c-4064-9ce9-b47ebb8a2666%2FUntitled.png?table=block&amp;id=e9b187e7-1341-45a8-b4d2-a73c40fd48cb&amp;t=e9b187e7-1341-45a8-b4d2-a73c40fd48cb&amp;width=603&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-44767d3bed854be6ac5eeeb679918600">如果上传的文件以jsp结尾，则会把刚刚已经上传成功的对象删掉。虽然理论上可以条件竞争，但路径还需要爆破2位大写字符，估计很难实现。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-e4a79d15ec07484ebca1caa90103d8fe" data-id="e4a79d15ec07484ebca1caa90103d8fe"><span><div id="e4a79d15ec07484ebca1caa90103d8fe" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e4a79d15ec07484ebca1caa90103d8fe" title="绕过isSafeFile"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">绕过isSafeFile</span></span></h2><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-d04f26a8ea034c16bcb625ea351e5d3b" data-id="d04f26a8ea034c16bcb625ea351e5d3b"><span><div id="d04f26a8ea034c16bcb625ea351e5d3b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d04f26a8ea034c16bcb625ea351e5d3b" title="方法一"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">方法一</span></span></h3><div class="notion-text notion-block-ef56c5c1a81847dca4df7d2b7f8430b7">这里禁止了jsp，但是没有禁止jspx，所以可以上传jspx绕过</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-b6f5a77be1054fa1872d5ea4fa0b5b1a" data-id="b6f5a77be1054fa1872d5ea4fa0b5b1a"><span><div id="b6f5a77be1054fa1872d5ea4fa0b5b1a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#b6f5a77be1054fa1872d5ea4fa0b5b1a" title="方法二"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">方法二</span></span></h3><div class="notion-text notion-block-594dcd4fb9a340fcb7000fc1affb9ac1">仔细观察代码不难发现，传入isSafeFile函数的uploadfile对象的name来源于<code class="notion-inline-code">this.multipartRequest.getFilesystemName(name);</code></div><div class="notion-text notion-block-410c57187d7943c4ac6b7733d42be323"><code class="notion-inline-code">this.multipartRequest.getFilesystemName(name)</code> 只会获取 <code class="notion-inline-code">name</code> 对应的最后一个文件的文件名，因为 <code class="notion-inline-code">files.get(name)</code> 返回的是与 <code class="notion-inline-code">name</code> 关联的最后一个 <code class="notion-inline-code">UploadedFile</code> 对象。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-5319663a8b79489781193b20d872526f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:576px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Ff6227ace-b426-4577-a116-daa5eb4c5e5d%2FUntitled.png?table=block&amp;id=5319663a-8b79-4897-8119-3b20d872526f&amp;t=5319663a-8b79-4897-8119-3b20d872526f&amp;width=576&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-f85ded2cefd4497e99ef7ccab402299b">这是因为 <code class="notion-inline-code">MultipartRequest</code> 内部存储文件的方式是基于一个哈希表，其中键是表单字段的名称（<code class="notion-inline-code">name</code>），而值是 <code class="notion-inline-code">UploadedFile</code> 对象。</div><div class="notion-text notion-block-711e3fe0345145f4a872eed8cf7271d2">在这种情况下，如果表单中有多个文件输入域具有相同的名称，后续的文件会覆盖之前的文件，导致哈希表中仅保留最后一个文件。</div><div class="notion-text notion-block-924553818db445bfbacd7cab39c7243a"><b>详细解释</b></div><div class="notion-text notion-block-6f950548e6834bca9c43c9ea2260ee00">假设表单上传了两个文件，两个文件的表单字段名称都叫 <code class="notion-inline-code">file</code>。当 <code class="notion-inline-code">MultipartRequest</code> 处理这些文件时：</div><ol start="1" class="notion-list notion-list-numbered notion-block-5cd82b405e814eaab1c6c64c4ba61e39"><li>第一个文件 <code class="notion-inline-code">file</code> 被添加到哈希表中，键为 <code class="notion-inline-code">file</code>，值为第一个 <code class="notion-inline-code">UploadedFile</code> 对象。</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-9cfd3a77b84d4f25bb76f083c8efd6de"><li>第二个文件 <code class="notion-inline-code">file</code> 也被添加到哈希表中，键仍然为 <code class="notion-inline-code">file</code>，值为第二个 <code class="notion-inline-code">UploadedFile</code> 对象。</li></ol><div class="notion-text notion-block-ad98985a194e4455a761e9a21cd460b9">由于哈希表中的键是唯一的，因此第二个文件会覆盖第一个文件的值。</div><div class="notion-text notion-block-10e5c727a7764ed9ae74684378a81e6c">所以构造如下表单即可绕过</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-31a925870227494aaea4bf79794ad18b" data-id="31a925870227494aaea4bf79794ad18b"><span><div id="31a925870227494aaea4bf79794ad18b" class="notion-header-anchor"></div><a class="notion-hash-link" href="#31a925870227494aaea4bf79794ad18b" title="绕过jfinal"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">绕过jfinal</span></span></h2><div class="notion-text notion-block-3182e36d487c4101bd87d4be84c182e7">由于jfinal的限制，导致不能直接访问jsp文件</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-2411154f7f6c4258a540128aa5222dc5"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:673px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fbd1fcd0c-b99a-42cf-abb2-0526791575b9%2FUntitled.png?table=block&amp;id=2411154f-7f6c-4258-a540-128aa5222dc5&amp;t=2411154f-7f6c-4258-a540-128aa5222dc5&amp;width=673&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-80dd155fd38d494f83398153fc389ce1">通过这篇文章的姿势：<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://forum.butian.net/share/1899">https://forum.butian.net/share/1899</a>
使用request.getRequestURI()这两个方法进行访问path的获取时，是不会进行URL解码操作的，利用这一点同样可以进行Bypass</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-a87567b9246745678bf4b91317c9b895"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Feb2483c3-d891-4da0-a73a-499ef3b6996d%2FUntitled.png?table=block&amp;id=a87567b9-2467-4567-8bf4-b91317c9b895&amp;t=a87567b9-2467-4567-8bf4-b91317c9b895&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Atlassian Confluence 模板注入漏洞（CVE-2023-22527）]]></title>
            <link>https://www.le1a.me//article/confluence-velocity</link>
            <guid>https://www.le1a.me//article/confluence-velocity</guid>
            <pubDate>Sun, 21 Jan 2024 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-1317c0311dd6805bb1a8e107ec9094f6"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><div class="notion-text notion-block-1317c0311dd680cb8991d09aac605f8a">文章首发自<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://forum.butian.net/share/2741">奇安信攻防社区</a></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-1317c0311dd68036a4f5c5942825e3b5" data-id="1317c0311dd68036a4f5c5942825e3b5"><span><div id="1317c0311dd68036a4f5c5942825e3b5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1317c0311dd68036a4f5c5942825e3b5" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-1317c0311dd68040b925db0899a1dbc1" data-id="1317c0311dd68040b925db0899a1dbc1"><span><div id="1317c0311dd68040b925db0899a1dbc1" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1317c0311dd68040b925db0899a1dbc1" title="漏洞原理"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞原理</b></span></span></h3><div class="notion-text notion-block-1317c0311dd680baadd3ea89a1ba3604">在Confluence中，.vm文件是使用Velocity模板语言创建的模板文件。Velocity是一个基于Java的模板引擎，它允许你使用简单的标记语言来引用Java对象和方法，从而动态生成HTML、XML或任何文本格式的内容。</div><div class="notion-text notion-block-1317c0311dd6806eb9c0ee817c023dc6">处理.vm文件的主要类是ConfluenceVelocityServlet。这个Servlet负责接收和处理来自浏览器的请求，加载和解析.vm模板，执行其中的Velocity代码，然后将生成的HTML发送回浏览器。</div><div class="notion-text notion-block-1317c0311dd6804b9171f54ebb54c0e5">这次的漏洞点位于：/template/aui/text-inline.vm文件，可以直接通过/template/aui/text-inline.vm访问</div><div class="notion-text notion-block-1317c0311dd68078b88bcb822eea9003"><code class="notion-inline-code">$stack.findValue(&quot;getText(&#x27;$parameters.label&#x27;)&quot;)</code>意味着从请求中获取的label参数的值传入了<code class="notion-inline-code">$stack.findValue</code>，由此可以判断这里存在模版注入！</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-1317c0311dd680a09a5bfc7bfd204618" data-id="1317c0311dd680a09a5bfc7bfd204618"><span><div id="1317c0311dd680a09a5bfc7bfd204618" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1317c0311dd680a09a5bfc7bfd204618" title="调用分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>调用分析</b></span></span></h3><div class="notion-text notion-block-1317c0311dd68001b4cfc1dc454c9d2e">.vm文件由<code class="notion-inline-code">ConfluenceVelocityServlet</code>处理</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680ea97bcc2c2790a2d30"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F99db354f-26d5-4d3b-b6c6-81dc2342be1a%2Fe22f77c1549f4aa6b310ec5d33c8de0d.png?table=block&amp;id=1317c031-1dd6-80ea-97bc-c2c2790a2d30&amp;t=1317c031-1dd6-80ea-97bc-c2c2790a2d30&amp;width=707.828125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd680dd9a22c3af55075a54">继续跟进</div><div class="notion-text notion-block-1317c0311dd680968981fc03472fdf98">这里跟进<code class="notion-inline-code">handleRequest()</code>，可以发现从URI中获取vm文件路径，传入<code class="notion-inline-code">getTemplate()</code>来返回模版对象</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd68024b385cc3b822698f9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F993515ab-4052-49a5-aed3-797a9633dd17%2Fimage.png?table=block&amp;id=1317c031-1dd6-8024-b385-cc3b822698f9&amp;t=1317c031-1dd6-8024-b385-cc3b822698f9&amp;width=707.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd6800bb885f23d6640a32b"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F15b87c5a-4b6a-436c-8310-f67a666781fc%2F97a75a2c0bfa0e50a7cd60d0233d754e.png?table=block&amp;id=1317c031-1dd6-800b-b885-f23d6640a32b&amp;t=1317c031-1dd6-800b-b885-f23d6640a32b&amp;width=707.84375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd6801b9e66c5989b10b8ef">然后传入<code class="notion-inline-code">mergeTemplate()</code>函数处理</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd6801eb7dbf3d4fa01d0b7"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fb30aeefa-7b83-4f46-b71a-6cdc4fc7e59d%2Fimage.png?table=block&amp;id=1317c031-1dd6-801e-b7db-f3d4fa01d0b7&amp;t=1317c031-1dd6-801e-b7db-f3d4fa01d0b7&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd680d287b3e7eb23987e6d">这里创建新的PageContext，获取其输出流，准备进行模板合并和输出操作。</div><div class="notion-text notion-block-1317c0311dd68024a25bd65239f0fe00">继续跟进<code class="notion-inline-code">template.merge()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680e19f43e1fbb1a9fead"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fc4c74208-bc44-4e91-aa24-29f6e26bb8d5%2Fimage.png?table=block&amp;id=1317c031-1dd6-80e1-9f43-e1fbb1a9fead&amp;t=1317c031-1dd6-80e1-9f43-e1fbb1a9fead&amp;width=707.828125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd6807e986ddaa9487ab078">跟进到merge的重载函数</div><div class="notion-text notion-block-1317c0311dd680f08ebeecd435b86cb5">由于传入的macroLibraries为空，所以直接执行try逻辑</div><ol start="1" class="notion-list notion-list-numbered notion-block-1317c0311dd68081ab39ea77aaf744b9"><li>调用 <code class="notion-inline-code">ica.pushCurrentTemplateName(this.name);</code> 将当前模板的名称压入到 <code class="notion-inline-code">ica</code> 的模板名堆栈中。这是为了在嵌套模板的情况下能够追踪到当前正在处理的模板名称。</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-1317c0311dd680f5bf8dc3bf7c370d2e"><li>调用 <code class="notion-inline-code">ica.setCurrentResource(this);</code> 将当前模板对象设置为 <code class="notion-inline-code">ica</code> 的当前资源。这是为了让 <code class="notion-inline-code">ica</code> 知道当前正在处理的模板资源。</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-1317c0311dd680d3b8c9c771ac2d6331"><li>最后，通过调用 <code class="notion-inline-code">((SimpleNode)this.data).render(ica, writer);</code> 进行模板渲染</li></ol><div class="notion-text notion-block-1317c0311dd680fbb80ac1266ce4fa51">省略中间的部分渲染过程，跟进到<code class="notion-inline-code">ASTReference#execute()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680cb9c24f95f4fa2e7b9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F5e740428-8285-4aeb-9958-6f02563498e1%2Fimage.png?table=block&amp;id=1317c031-1dd6-80cb-9c24-f95f4fa2e7b9&amp;t=1317c031-1dd6-80cb-9c24-f95f4fa2e7b9&amp;width=707.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd680388acbf473e685d746">这里从上下文中获取OgnlValueStack，继续跟进</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd68019865bfa6d8ead0ea2"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F44225b74-de09-4018-b27f-277590603a3a%2F690287b645ae33dfc462717e50a1d0cf.png?table=block&amp;id=1317c031-1dd6-8019-865b-fa6d8ead0ea2&amp;t=1317c031-1dd6-8019-865b-fa6d8ead0ea2&amp;width=707.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd68059b12df7d53b88ff34"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6fe3bec0-d754-4d8a-9538-60dc91f11021%2F544288fb70d17ceafa3f06389f68cd6c.png?table=block&amp;id=1317c031-1dd6-8059-b12d-f7d53b88ff34&amp;t=1317c031-1dd6-8059-b12d-f7d53b88ff34&amp;width=707.90625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd68070b2ecc60ce5c07432">这里从请求中获取到参数，然后通过<code class="notion-inline-code">Object obj = method.invoke(o, params);</code>执行，继续跟进</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680179a32efa5220908ea"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F9c358602-f3bf-464f-bdeb-89c067d77175%2Fed5c01b18467688afa915ea3c790f2bd.png?table=block&amp;id=1317c031-1dd6-8017-9a32-efa5220908ea&amp;t=1317c031-1dd6-8017-9a32-efa5220908ea&amp;width=707.921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd68057ba86e8e210f39003">经过几层invoke调用后，来到了最终vm文件模版的位置——<code class="notion-inline-code">OgnlValueStack.findValue()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680fab583f4d3532af4c3"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fbf23f16f-d827-4550-b52a-4780c209c59c%2F6c71d0aace93017b4bacb4d4ecf292b1.png?table=block&amp;id=1317c031-1dd6-80fa-b583-f4d3532af4c3&amp;t=1317c031-1dd6-80fa-b583-f4d3532af4c3&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-1317c0311dd68075838bc71ab561654a">随后，传给label参数的OGNL表达式语句被执行</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680118768d61d5e7ee02c"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:650px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6bf97707-7247-4990-b53c-ea2448e33da0%2F4d1a9301a88dd689252d23be73a0cec0.png?table=block&amp;id=1317c031-1dd6-8011-8768-d61d5e7ee02c&amp;t=1317c031-1dd6-8011-8768-d61d5e7ee02c&amp;width=650&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-1317c0311dd6802cbec3e2f328819293" data-id="1317c0311dd6802cbec3e2f328819293"><span><div id="1317c0311dd6802cbec3e2f328819293" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1317c0311dd6802cbec3e2f328819293" title="绕过沙箱RCE"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>绕过沙箱RCE</b></span></span></h3><div class="notion-text notion-block-1317c0311dd68020ba60e18d17f7a34a">由这篇文章可得知：<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://github.blog/2023-01-27-bypassing-ognl-sandboxes-for-fun-and-charities/?ref=blog.projectdiscovery.io#strutsutil:~:text=(PageContextImpl)-,For%20Velocity%3A,-.KEY_velocity.struts2.context">https://github.blog/2023-01-27-bypassing-ognl-sandboxes-for-fun-and-charities/?ref=blog.projectdiscovery.io#strutsutil:~:text=(PageContextImpl)-,For%20Velocity%3A,-.KEY_velocity.struts2.context</a></div><div class="notion-text notion-block-1317c0311dd680159521d4a28672528f">对于Velocity模版引擎，可以使用如下方法：</div><ul class="notion-list notion-list-disc notion-block-1317c0311dd680c9a718df7f30fd355f"><li><code class="notion-inline-code">.KEY_velocity.struts2.context</code> -&gt; (<code class="notion-inline-code">StrutsVelocityContext</code>)</li><ul class="notion-list notion-list-disc notion-block-1317c0311dd680c9a718df7f30fd355f"><li><code class="notion-inline-code">ognl</code> (<code class="notion-inline-code">org.apache.struts2.views.jsp.ui.OgnlTool</code>)</li><li><code class="notion-inline-code">struts</code> (<code class="notion-inline-code">org.apache.struts2.views.velocity.result.VelocityStrutsUtils</code>)</li></ul></ul><div class="notion-text notion-block-1317c0311dd68070b21de82586e09219">org.apache.struts2.views.jsp.ui.OgnlTool 类在没有 OgnlContext 的情况下调用了 Ognl.getValue()。需要注意的是，该类属于 OGNL 库，而不是 Struts 的一部分。因此，这个&quot;findValue&quot;调用在 Struts 的沙箱限制之外运行。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd68098a508fbafe0734710"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F754b5e1b-0658-44aa-b487-8f98f30cfbfd%2F5473a8f4ae2a8e00f10d22368c6b5699.png?table=block&amp;id=1317c031-1dd6-8098-a508-fbafe0734710&amp;t=1317c031-1dd6-8098-a508-fbafe0734710&amp;width=2538&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-1317c0311dd68009a095fdb5b1b6e980" data-id="1317c0311dd68009a095fdb5b1b6e980"><span><div id="1317c0311dd68009a095fdb5b1b6e980" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1317c0311dd68009a095fdb5b1b6e980" title="漏洞复现"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞复现</b></span></span></h2><ol start="1" class="notion-list notion-list-numbered notion-block-1317c0311dd68099b128d561d5c03e82"><li>网站首页如下图：</li></ol><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd68015856eea9e4e0b9c4c"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F4df4b43f-dbfb-419f-9b3a-aa9bcc81d496%2F073dda6525265eb10056a37ca253689a.png?table=block&amp;id=1317c031-1dd6-8015-856e-ea9e4e0b9c4c&amp;t=1317c031-1dd6-8015-856e-ea9e4e0b9c4c&amp;width=3004&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><ol start="1" class="notion-list notion-list-numbered notion-block-1317c0311dd680d4b24fd1bfb68fefd4"><li>使用如下POC进行漏洞复现</li></ol><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1317c0311dd680fb8577f6c4cd8b2472"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F71a4d1a0-832b-4558-a3ab-8f3e5d1debd6%2Fimage.png?table=block&amp;id=1317c031-1dd6-80fb-8577-f6c4cd8b2472&amp;t=1317c031-1dd6-80fb-8577-f6c4cd8b2472&amp;width=2822&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[禅道二次SQL注入到RCE漏洞分析]]></title>
            <link>https://www.le1a.me//article/zentao-sql-to-rce</link>
            <guid>https://www.le1a.me//article/zentao-sql-to-rce</guid>
            <pubDate>Mon, 02 Sep 2024 16:00:00 GMT</pubDate>
            <description><![CDATA[该文章需要密码才能查看！]]></description>
            <content:encoded><![CDATA[该文章需要密码才能查看！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[泛微 e-cology 远程代码执行漏洞分析]]></title>
            <link>https://www.le1a.me//article/weaver-e-cology-jdbc</link>
            <guid>https://www.le1a.me//article/weaver-e-cology-jdbc</guid>
            <pubDate>Mon, 02 Sep 2024 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-7fe183095ae841c3b999d9305725f8eb"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><div class="notion-text notion-block-6ca1e7b149cf4063a0f172824def6ace">文章首发自<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://xz.aliyun.com/t/15402">先知社区</a></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-60d820e58c3940318ed8369c260b3e71" data-id="60d820e58c3940318ed8369c260b3e71"><span><div id="60d820e58c3940318ed8369c260b3e71" class="notion-header-anchor"></div><a class="notion-hash-link" href="#60d820e58c3940318ed8369c260b3e71" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><div class="notion-text notion-block-2d2af69af9f74abea597a10b3cb62754">这个漏洞是一个前台身份验证绕过加上后台JDBC注入的组合漏洞。首先来分析一下这个身份验证绕过漏洞。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-563bfced9a1f4b18948f4e23e7fcd21f" data-id="563bfced9a1f4b18948f4e23e7fcd21f"><span><div id="563bfced9a1f4b18948f4e23e7fcd21f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#563bfced9a1f4b18948f4e23e7fcd21f" title="serviceTicketId"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>serviceTicketId</b></span></span></h3><div class="notion-text notion-block-c7d549b41ddd437a8c4953b4dc81ed19">漏洞代码位于<code class="notion-inline-code">com.weaver.passport.controller.RestLoginController#appThirdLogin()</code></div><div class="notion-text notion-block-74915fe9c201469eac3f28c68f059d2a">跟进到</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-0deb768c9dff49489735534f4a6e12d5"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F56382abb-16f6-4320-95b6-7cab3887ef53%2Fimage.png?table=block&amp;id=0deb768c-9dff-4948-9735-534f4a6e12d5&amp;t=0deb768c-9dff-4948-9735-534f4a6e12d5&amp;width=693&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-612cfa46c774489890d5bd4f7d23f281">该方法会根据传入的<code class="notion-inline-code">loginType</code>参数获取对应的<code class="notion-inline-code">CasLoginEnum</code>。如果当前没有可用的票据(ticket),则会使用传入的<code class="notion-inline-code">username</code>创建一个新的<code class="notion-inline-code">TicketGrantingTicket</code>。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-1a80486fa4564ca08d53fe06e354b682"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fe32149ad-d14b-4d68-8789-f9d4e1bb1533%2Fimage_(1).png?table=block&amp;id=1a80486f-a456-4ca0-8d53-fe06e354b682&amp;t=1a80486f-a456-4ca0-8d53-fe06e354b682&amp;width=707.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-3a5e7dc6dd7e446d93cbbdda138e0a75"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F477ae9b2-8140-4a21-8929-e9293ba101b7%2Fimage_(2).png?table=block&amp;id=3a5e7dc6-dd7e-446d-93cb-bdda138e0a75&amp;t=3a5e7dc6-dd7e-446d-93cb-bdda138e0a75&amp;width=707.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-181137db85844fccbb36f2b1e054eb68">在<code class="notion-inline-code">authenticateInternal</code>方法中,会根据相应的条件获取用户的相关信息。</div><div class="notion-text notion-block-20b25b555a9243cf9ee9b4cca3da0f85">最后在appThirdLogin中生成serviceTicketId</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-f14083af39f741239723b82a98cac39f" data-id="f14083af39f741239723b82a98cac39f"><span><div id="f14083af39f741239723b82a98cac39f" class="notion-header-anchor"></div><a class="notion-hash-link" href="#f14083af39f741239723b82a98cac39f" title="EteamsId"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>EteamsId</b></span></span></h3><div class="notion-text notion-block-e52d65c36166415e93c6363a12998006">在获取到 <code class="notion-inline-code">serviceTicketId</code> 之后,可以通过调用 <code class="notion-inline-code">PassportLoginController#generateEteamsId()</code> 方法来获取 <code class="notion-inline-code">EteamsId</code>。</div><blockquote class="notion-quote notion-block-5e82ce152d104c889679952967fe21a4"><div>在泛微 e-cology 10 中,EteamsId 是一种用于会话管理的机制,类似于其他 Web 应用程序中的 Session ID 或 Cookie。</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-32a7fa8a7f9944f8ab3cd609ff12ec6e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F1a348990-58d8-48f9-8a1b-8f3553452f6e%2Fimage_(3).png?table=block&amp;id=32a7fa8a-7f99-44f8-ab3c-d609ff12ec6e&amp;t=32a7fa8a-7f99-44f8-ab3c-d609ff12ec6e&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-9f79b414d5364552bd54fcd6af4a10cc">这里返回了 <code class="notion-inline-code">EteamsId</code>,它是通过将 <code class="notion-inline-code">loginType</code> 和 <code class="notion-inline-code">serviceTicketId</code> 的 MD5 值拼接而成的。在补丁中,已经无法通过该接口获取 <code class="notion-inline-code">EteamsId</code> 了。
不过,该代码给出了构造 <code class="notion-inline-code">EteamsId</code> 的方式,最初我们以为可以手动伪造。但经过测试发现,这并不可行。原因是 <code class="notion-inline-code">this.securityContextCache.put(tokenId, context)</code> 将 <code class="notion-inline-code">EteamsId</code> 存储到了上下文环境中,而手动构造的 <code class="notion-inline-code">EteamsId</code> 没有经历这一步,因此无法通过校验。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-9e5ede8ee4dd48768013ac9e574adbcd" data-id="9e5ede8ee4dd48768013ac9e574adbcd"><span><div id="9e5ede8ee4dd48768013ac9e574adbcd" class="notion-header-anchor"></div><a class="notion-hash-link" href="#9e5ede8ee4dd48768013ac9e574adbcd" title="JDBC Attack"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>JDBC Attack</b></span></span></h3><div class="notion-text notion-block-215a99eb6d6e4f6f8f48a86adae5cb22">漏洞点在<code class="notion-inline-code">DataConnController#testConnByBasePassword()</code></div><div class="notion-text notion-block-b323896720b94307b9ffe20a8ae04ac2">跟进到<code class="notion-inline-code">testConn()</code></div><div class="notion-text notion-block-09158a6c83c14cf69bb56188061e02f8">继续跟进</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-880b527d839448e3a04d5d2acc2f5daf"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fdc62cffa-a82d-4874-8eaf-a2ed4cf457ba%2Fimage_(4).png?table=block&amp;id=880b527d-8394-48e3-a04d-5d2acc2f5daf&amp;t=880b527d-8394-48e3-a04d-5d2acc2f5daf&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-7b55722bd7f34440bd52780bf9b49b8b">该方法会根据<code class="notion-inline-code">DbType</code>参数来判断使用哪种数据库驱动。如果相应的驱动尚未加载,它还会通过反射的方式动态获取并实例化该驱动。随后,它会采用 JDK 自带的<code class="notion-inline-code">DriverManager.getConnection()</code>方法建立数据库连接。这种方式不需要显式声明数据库驱动,而是由 JDBC URL 来决定使用哪种驱动,但前提是该驱动类已经被成功加载。</div><div class="notion-text notion-block-3a0aef11c2554ca1920a4c3cbcf6c375">这里可以利用的点有很多，可以打mysql、db2等，但这两种都需要出网才能利用。</div><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-e5bd3fd776594efe950fdcb12d6c6cb2" data-id="e5bd3fd776594efe950fdcb12d6c6cb2"><span><div id="e5bd3fd776594efe950fdcb12d6c6cb2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e5bd3fd776594efe950fdcb12d6c6cb2" title="mysql"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>mysql</b></span></span></h4><div class="notion-text notion-block-ab2b836f149f4f04ab5179ee721ef124">这里存在 MySQL5.x版本，可以利用它来读取文件。同时,如果存在合适的反序列化漏洞链,也能RCE</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-3c7acfe10325429cbf89cb8f089182fc"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F0e735628-295c-42d1-b136-7bf16a61ad8d%2Fimage_(5).png?table=block&amp;id=3c7acfe1-0325-429c-bf89-cb8f089182fc&amp;t=3c7acfe1-0325-429c-bf89-cb8f089182fc&amp;width=693&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-c339cfb76a954c399eeff30c5387993c" data-id="c339cfb76a954c399eeff30c5387993c"><span><div id="c339cfb76a954c399eeff30c5387993c" class="notion-header-anchor"></div><a class="notion-hash-link" href="#c339cfb76a954c399eeff30c5387993c" title="db2"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>db2</b></span></span></h4><div class="notion-text notion-block-82b04311a8c3448d82d2fdbadf19c878">由于新版本 ec10 中使用的 JDK 版本为 8u201,因此需要借助<code class="notion-inline-code">javax.el.ELProcessor#eval</code></div><div class="notion-text notion-block-ce35db9d1e184664ada3d290c4fd2fab">方法来绕过一些限制。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-5e4ae8b5ee3e4bd9b7b3c2223c52ea69"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6e03c13a-abf1-4783-9668-a921cf904f30%2Fimage_(6).png?table=block&amp;id=5e4ae8b5-ee3e-4bd9-b7b3-c2223c52ea69&amp;t=5e4ae8b5-ee3e-4bd9-b7b3-c2223c52ea69&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-e1ace7871ed945958c36174cb7eb83e0"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F0029afa2-1bc0-4a0a-a988-2a28dbe4d55f%2Fimage_(7).png?table=block&amp;id=e1ace787-1ed9-4595-8c36-174cb7eb83e0&amp;t=e1ace787-1ed9-4595-8c36-174cb7eb83e0&amp;width=707.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h4 class="notion-h notion-h3 notion-h-indent-2 notion-block-3481c8744cab4899afc7cfb1098eb232" data-id="3481c8744cab4899afc7cfb1098eb232"><span><div id="3481c8744cab4899afc7cfb1098eb232" class="notion-header-anchor"></div><a class="notion-hash-link" href="#3481c8744cab4899afc7cfb1098eb232" title="H2"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>H2</b></span></span></h4><div class="notion-text notion-block-f9dd82b85e0c42bb95f948d3d9d0fe81">更加优雅的利用方式就是通过加载 H2 数据库驱动来实现无需出网的利用。虽然在当前的环境中无法直接加载 H2 驱动，但我们可以寻找其他的方法加载h2驱动：<code class="notion-inline-code">IaAuthclientController#save()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-cca03c7238c74d20a2d539c597a54bcc"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fa40050d6-98ea-460f-ab94-b8b40842d125%2Fimage_(8).png?table=block&amp;id=cca03c72-38c7-4d20-a2d5-39c597a54bcc&amp;t=cca03c72-38c7-4d20-a2d5-39c597a54bcc&amp;width=707.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-c745e941fb634a3294ca3aad7083cf84">构造如下格式的数据包即可加载h2数据库驱动</div><div class="notion-text notion-block-b120e1c8138d4c308a62802754bef3dd">此时我们就可以利用h2数据库执行任意Java代码了，这里dbType任意即可。</div><div class="notion-blank notion-block-7218b8a03335481b8cd651e530a9811d"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[蓝凌EKP 远程代码执行漏洞分析]]></title>
            <link>https://www.le1a.me//article/ekp</link>
            <guid>https://www.le1a.me//article/ekp</guid>
            <pubDate>Tue, 25 Jun 2024 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-ecaa9d22cb914319a4ed94546d978306"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><div class="notion-text notion-block-3f69b0304d8847b89531b6ab6324c646">文章首发自<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://xz.aliyun.com/t/15006">先知社区</a></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-5548d1f3d5ba4695aa6d42a1d4441cb1" data-id="5548d1f3d5ba4695aa6d42a1d4441cb1"><span><div id="5548d1f3d5ba4695aa6d42a1d4441cb1" class="notion-header-anchor"></div><a class="notion-hash-link" href="#5548d1f3d5ba4695aa6d42a1d4441cb1" title="漏洞描述"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞描述</b></span></span></h2><div class="notion-text notion-block-ac8bea1e14e5405cb43438f0e1a47464">某凌 EKP 由深圳市某凌软件股份有限公司开发，是一款面向中小企业的移动化智能办公产品。</div><div class="notion-text notion-block-ea84504fdc9e4227b85ac08235f9bbbe">该系统存在远程命令执行漏洞，攻击者能够借助 <code class="notion-inline-code">sysUiComponent</code> 接口的 <code class="notion-inline-code">replaceExtend</code> 方法，把 <code class="notion-inline-code">dataxml.jsp</code>后台命令执行漏洞转化为前台命令执行漏洞。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-983940e3b32143dcac5345c8db5d17c3" data-id="983940e3b32143dcac5345c8db5d17c3"><span><div id="983940e3b32143dcac5345c8db5d17c3" class="notion-header-anchor"></div><a class="notion-hash-link" href="#983940e3b32143dcac5345c8db5d17c3" title="影响版本"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>影响版本</b></span></span></h2><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-88b0545f0a36459590db982f05167399" data-id="88b0545f0a36459590db982f05167399"><span><div id="88b0545f0a36459590db982f05167399" class="notion-header-anchor"></div><a class="notion-hash-link" href="#88b0545f0a36459590db982f05167399" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-cacfbe6324c242beab39e52dc0d8a965" data-id="cacfbe6324c242beab39e52dc0d8a965"><span><div id="cacfbe6324c242beab39e52dc0d8a965" class="notion-header-anchor"></div><a class="notion-hash-link" href="#cacfbe6324c242beab39e52dc0d8a965" title="前置漏洞"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>前置漏洞</b></span></span></h3><div class="notion-text notion-block-308f49e0425042389c748839ba7e1eff">该漏洞属于后台 dataxml.jsp 远程命令执行的前台绕过版本，接下来先介绍一下此后台漏洞的原理。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-f99e8e5d17bb4c27937710bac9589503"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:705px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F7a84732e-6350-41c6-8b8b-653192eac326%2FUntitled.png?table=block&amp;id=f99e8e5d-17bb-4c27-9377-10bac9589503&amp;t=f99e8e5d-17bb-4c27-9377-10bac9589503&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-84824ff4a31c45ac8b1fb0f39f1e86d8">在此处执行了 <code class="notion-inline-code">treeBean</code> 的 <code class="notion-inline-code">getDataList</code> 方法，并传入了请求的参数。而 <code class="notion-inline-code">SysFormulaSimulateByJS</code> 类继承了 <code class="notion-inline-code">IXMLDataBean</code>，其 getDataList 方法如下：</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-5d78e1f8f13b4193831853fe5695ea23"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Febca82f9-923b-42d7-b727-8a73fdb76e71%2FUntitled.png?table=block&amp;id=5d78e1f8-f13b-4193-8318-53fe5695ea23&amp;t=5d78e1f8-f13b-4193-8318-53fe5695ea23&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-d476f17c7e334b7f8b329314a10bfb2b">通过 <code class="notion-inline-code">FormulaParser#parseValueScript()</code> 执行了传入的 script 脚本，尽管禁用了 unicode 以及一些黑名单，但未禁用 <code class="notion-inline-code">Runtime.exec</code> 和 <code class="notion-inline-code">ProcessBuilder</code>，所以仍然能够执行命令。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-3a4dedf254104a8e87eb5afebe9c10eb"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Ffccac46d-8ba1-4c0d-b081-0a8b4e342b6b%2FUntitled.png?table=block&amp;id=3a4dedf2-5410-4a8e-87eb-5afebe9c10eb&amp;t=3a4dedf2-5410-4a8e-87eb-5afebe9c10eb&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-b32f70d602fe43b7a6ecd0199bd740eb">这种利用 bsh 的打法还有许多接口可用，在此不逐一举例，更多详情见：<a target="_blank" rel="noopener noreferrer" class="notion-link" href="https://github.com/ax1sX/SecurityList/blob/main/Java_OA/LandrayEkpAudit.md">LandrayEkpAudit</a></div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-e4ba653a308a4d7db9fb27c81daf3feb" data-id="e4ba653a308a4d7db9fb27c81daf3feb"><span><div id="e4ba653a308a4d7db9fb27c81daf3feb" class="notion-header-anchor"></div><a class="notion-hash-link" href="#e4ba653a308a4d7db9fb27c81daf3feb" title="漏洞绕过"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞绕过</b></span></span></h3><div class="notion-text notion-block-2219d6d9537a482cb09204f058175f74">这个洞后来加了权限校验(WEB-INF/KmssConfig/sys/authentication/spring.xml)，匿名用户仅允许访问以下接口：</div><div class="notion-text notion-block-6f67a7405a304a6da7e6f0f38da94db3">还有一种打法是通过custom.jsp去SSRF打dataxml.jsp。不过这里也已经无法利用了。</div><div class="notion-text notion-block-b002bb3f7f25456286e167272c30bf94">在该系统V16版本中，引入了<code class="notion-inline-code">SysUiComponent</code>，并且在<code class="notion-inline-code">design.xml</code>(WEB-INF/KmssConfig/sys/ui/design.xml)和<code class="notion-inline-code">spring.xml</code>中忘记添加鉴权，导致可调用<code class="notion-inline-code">SysUiComponentAction#getThemeInfo</code>进行文件上传。</div><div class="notion-text notion-block-c3fd6159521c43ca903de6b3d485f968">这次漏洞的绕过方式是通过<code class="notion-inline-code">SysUiComponentAction#replaceExtend()</code>将<code class="notion-inline-code">dataxml.jsp</code>所在目录的文件复制到可访问的目录。</div><blockquote class="notion-quote notion-block-c9aca6245dc0483e9659e51e1913515b"><div>借助这个漏洞，我们能够将其移动至无需鉴权的位置，也就是配置中的静态资源或者匿名路径所在之处。</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-9c04f67989aa40bca9b1130c8d5513a9"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F43bbd522-a90f-4d6e-9f18-a947bec8d4c9%2FUntitled.png?table=block&amp;id=9c04f679-89aa-40bc-a9b1-130c8d5513a9&amp;t=9c04f679-89aa-40bc-a9b1-130c8d5513a9&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-8c876956f5774bef97b7a4c2c4e66156">继续跟进，调用的是<code class="notion-inline-code">SysUiComponentService#replaceExtend()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-149dcc9f3d9b4d7e9b9866e6f2279090"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F307c316d-a7d5-4ca6-bc7c-d9bd5a2c1482%2FUntitled.png?table=block&amp;id=149dcc9f-3d9b-4d7e-9b98-66e6f2279090&amp;t=149dcc9f-3d9b-4d7e-9b98-66e6f2279090&amp;width=909&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-d481b17e78874d65b12021b1e9acaf30">这里获取两个参数的值，删除extendId目录，然后将folderName目录的文件复制过来。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-0a930a1c6ef04ca099f0234c1ebf225d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fc418a934-6350-47f7-8bb7-6b974c059a59%2FUntitled.png?table=block&amp;id=0a930a1c-6ef0-4ca0-99f0-234c1ebf225d&amp;t=0a930a1c-6ef0-4ca0-99f0-234c1ebf225d&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-2e81681d37974d19891fea9160d1f732">继续跟进copyDirectory得到：</div><div class="notion-text notion-block-99c54d952fdc4764912d77cbfc82adde">继续跟进</div><div class="notion-text notion-block-8daccba4ac4548e8b40133b7cc8249c7">最后通过<code class="notion-inline-code">Files.copy</code>将一个目录及其内容递归地复制到另一个目录。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-d8721d60cd58462b8f5e7cb9ca70c49e" data-id="d8721d60cd58462b8f5e7cb9ca70c49e"><span><div id="d8721d60cd58462b8f5e7cb9ca70c49e" class="notion-header-anchor"></div><a class="notion-hash-link" href="#d8721d60cd58462b8f5e7cb9ca70c49e" title="路由分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>路由分析</b></span></span></h3><div class="notion-text notion-block-75aae2eb72994828834a4f5e7f6c667d">通过分析配置文件 <code class="notion-inline-code">/WEB-INF/KmssConfig/sys/ui/spring-mvc.xml</code>，我们可以得出以下结论：</div><div class="notion-text notion-block-907f30f3923042fab72756e0f12ec7b9">访问方式</div><ul class="notion-list notion-list-disc notion-block-e855e00d9f46485dae9a37e327149893"><li><b>URL</b>: <code class="notion-inline-code">/sys/ui/sys_ui_component/sysUiComponent.do</code></li></ul><ul class="notion-list notion-list-disc notion-block-0d1612e2268b44e59efbadb8c075bd05"><li><b>类</b>: <code class="notion-inline-code">com.landray.kmss.sys.ui.actions.SysUiComponentAction</code></li></ul><div class="notion-text notion-block-7e89aba8234d492891902d45175d8a84">调用特定方法</div><div class="notion-text notion-block-0d12b302a62c486683d5ae821c91103e">要调用 <code class="notion-inline-code">SysUiComponentAction</code> 类中的 <code class="notion-inline-code">replaceExtend()</code> 方法，需要在URL中添加 <code class="notion-inline-code">method</code> 参数</div><div class="notion-text notion-block-0f4ede0bb7b24d409e2dd98ec1883e7b">接下来如何构造PoC就很清晰了，只需要将<code class="notion-inline-code">dataxml.jsp</code>所在的目录<code class="notion-inline-code">/sys/common</code>通过目录穿越复制到匿名用户可访问的Web目录即可。</div><div class="notion-text notion-block-e1bf209a6c4045559de443d761391a1c">执行命令</div><div class="notion-blank notion-block-df8746cc538b48aea0c687f8efde7226"> </div></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[通天星CMSV6 远程代码执行漏洞分析]]></title>
            <link>https://www.le1a.me//article/GskyCMSV6</link>
            <guid>https://www.le1a.me//article/GskyCMSV6</guid>
            <pubDate>Wed, 10 Jul 2024 16:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-5564477bf86b4d60acf107b8f750aeb4"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-1ffe56473e084265b74422eeb93b6b40" data-id="1ffe56473e084265b74422eeb93b6b40"><span><div id="1ffe56473e084265b74422eeb93b6b40" class="notion-header-anchor"></div><a class="notion-hash-link" href="#1ffe56473e084265b74422eeb93b6b40" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><div class="notion-text notion-block-2ae5a2edbb3b4f6aa78c4d12a9b329e8">漏洞入口在<code class="notion-inline-code">HelpCenterController#loadAllUserInfo()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-0a04100b164b4652ba3605b99f44c536"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F976fcfe1-d32c-43ad-b492-b7a67fcf1e58%2FUntitled.png?table=block&amp;id=0a04100b-164b-4652-ba36-05b99f44c536&amp;t=0a04100b-164b-4652-ba36-05b99f44c536&amp;width=1874&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-4800b91e20144c16a354c216352df3b5">这里通过<code class="notion-inline-code">getRequestStringEx</code>方法获取name参数的值，然后传入<code class="notion-inline-code">helpCenterService#loadAllUserInfo()</code></div><div class="notion-text notion-block-a28e9bee594a4f1eb316ff28fdf51ce4">先来看getRequestStringEx方法</div><div class="notion-text notion-block-5ecee74709eb4799831c560a5a83006b">通过request.getParameter并使用URLDecoder.decode对参数的值进行url解码了！</div><div class="notion-text notion-block-d88e07cda42a483e8610410ea260a80d">回过头来继续跟进到<code class="notion-inline-code">helpCenterService#loadAllUserInfo()</code></div><div class="notion-text notion-block-0bf77f0da8ad4e28932ad66a975dbb20">跟进到<code class="notion-inline-code">helpCenterDao#loadAllUserInfo()</code></div><div class="notion-text notion-block-9ba3a8a57eee45c2bd367655cef8d9e5">这里将传入的name拼接SQL，构造SQL语句，传入<code class="notion-inline-code">com.gpsCommon.service.impl.BaseServiceImpl#findByPage()</code></div><div class="notion-text notion-block-31fe3e290e594e58bef47feb073af4b3">这里构造了一个countSql，把countSql和原始SQL一起传入<code class="notion-inline-code">paginationDao#getExtraByNativeSqlEx()</code></div><div class="notion-text notion-block-362ee2c264d94480943fc5fad64daf96">继续跟进后发现，countSql和原始SQL都被在<code class="notion-inline-code">action.doInHibernate(sessionToExpose)</code>中执行了。</div><div class="notion-text notion-block-9c20e4cd309e4967b4b313a825edfffd">跟进到<code class="notion-inline-code">com.framework.web.dao.HibernatePaginationCallback#doInHibernate()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-f13685a6cc6e475a8c7c90b175b427a4"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F65003682-c304-4bed-b803-ff47f51adcef%2FUntitled.png?table=block&amp;id=f13685a6-cc6e-475a-8c7c-90b175b427a4&amp;t=f13685a6-cc6e-475a-8c7c-90b175b427a4&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-d6394e053f13467b95f37690756c384d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fbcf67651-824b-4a16-805c-f32c38aed425%2FUntitled.png?table=block&amp;id=d6394e05-3f13-467b-95f3-7690756c384d&amp;t=d6394e05-3f13-467b-95f3-7690756c384d&amp;width=894&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-3d66a9a6424b484c9a58b9667d021ef4">这里默认pagination不为空的，而且countHql也不为空，最后只会执行countHql而不会执行Hql。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-73d0405ca5634bc2ac09720f74f740d6" data-id="73d0405ca5634bc2ac09720f74f740d6"><span><div id="73d0405ca5634bc2ac09720f74f740d6" class="notion-header-anchor"></div><a class="notion-hash-link" href="#73d0405ca5634bc2ac09720f74f740d6" title="构造SQL语句"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>构造SQL语句</b></span></span></h2><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-b81ce36ffb9347d19d3c551fd186a047"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fc7ddbdb3-ff4c-4d2b-941c-18d1eb05b336%2FUntitled.png?table=block&amp;id=b81ce36f-fb93-47d1-9d3c-551fd186a047&amp;t=b81ce36f-fb93-47d1-9d3c-551fd186a047&amp;width=1171&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-a62addd6fdd34ebf916a8312cff7b962"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:626px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F76f208c7-82d4-4a53-a154-d5f9fd9f0cbc%2FUntitled.png?table=block&amp;id=a62addd6-fdd3-4ebf-916a-8312cff7b962&amp;t=a62addd6-fdd3-4ebf-916a-8312cff7b962&amp;width=626&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-e6645520193a4cacbdb9c86fe5af93ab">这里可控的name在子查询当中，所以需要闭合<code class="notion-inline-code">&#x27;)</code>并且需要给子查询的结果一个别名</div><div class="notion-text notion-block-8619e47bb8fe48a293b0d524f12fdf4d">但是发现还有waf</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-e08435d624c24ae2ad27a69b8fdd1006"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fb0ea3918-2338-4d31-8323-9a122458e038%2FUntitled.png?table=block&amp;id=e08435d6-24c2-4ae2-ad27-a69b8fdd1006&amp;t=e08435d6-24c2-4ae2-ad27-a69b8fdd1006&amp;width=1389&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-376c3764fe494eaa9d85d083e9e41db5" data-id="376c3764fe494eaa9d85d083e9e41db5"><span><div id="376c3764fe494eaa9d85d083e9e41db5" class="notion-header-anchor"></div><a class="notion-hash-link" href="#376c3764fe494eaa9d85d083e9e41db5" title="WAF绕过"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>WAF绕过</b></span></span></h2><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-05711ea3c2014b81a961e68af764b185" data-id="05711ea3c2014b81a961e68af764b185"><span><div id="05711ea3c2014b81a961e68af764b185" class="notion-header-anchor"></div><a class="notion-hash-link" href="#05711ea3c2014b81a961e68af764b185" title="方法一"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>方法一</b></span></span></h3><div class="notion-text notion-block-18481141d34c4b14b6b7bf6e307a8e66">在SqlFilter里有对参数的SQL注入语句拦截</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-18cc77f11a3c47d7a0ed60082338dc75"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F7d0f87d9-0300-4a50-93b9-dae5ae9eb774%2FUntitled.png?table=block&amp;id=18cc77f1-1a3c-47d7-a0ed-60082338dc75&amp;t=18cc77f1-1a3c-47d7-a0ed-60082338dc75&amp;width=1940&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-a73e9d71630d46fc943600614124f59a"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F0173dfa7-28cb-4bea-8096-0962f57113ad%2FUntitled.png?table=block&amp;id=a73e9d71-630d-46fc-9436-00614124f59a&amp;t=a73e9d71-630d-46fc-9436-00614124f59a&amp;width=2678&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-19380e4c78cb49b8bcea665f66751d25">这里如果URL中出现downloadLogger.action则会返回false，添加<code class="notion-inline-code">;downloadLogger.action</code>即可绕过。</div><div class="notion-text notion-block-b80a1589cd564a78bb4e13eebe3bdb0a">但是单引号被html实体编码了，跟进获取参数的代码发现<code class="notion-inline-code">getRequestStringEx</code>才用的request对象是<code class="notion-inline-code">XssHttpServletRequestWrapperNew</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-fb749a8ad9c0458082dbab19a3320a4a"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fbace4e17-f735-4593-bfb3-408b60414b1e%2FUntitled.png?table=block&amp;id=fb749a8a-d9c0-4580-82db-ab19a3320a4a&amp;t=fb749a8a-d9c0-4580-82db-ab19a3320a4a&amp;width=935&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-2589a1930d7b443fa3d737ed63ec2dd2">在<code class="notion-inline-code">XssHttpServletRequestWrapperNew#getParameter()</code>中参数被html编码了</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-bcb9456214764b38b04a0c29bd65ac0f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:513px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fe617b3f6-5218-4143-8a20-bfa5101ee58a%2FUntitled.png?table=block&amp;id=bcb94562-1476-4b38-b04a-0c29bd65ac0f&amp;t=bcb94562-1476-4b38-b04a-0c29bd65ac0f&amp;width=513&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-299d53e116f54e10932a9567a583f68d" data-id="299d53e116f54e10932a9567a583f68d"><span><div id="299d53e116f54e10932a9567a583f68d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#299d53e116f54e10932a9567a583f68d" title="方法二"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>方法二</b></span></span></h3><div class="notion-text notion-block-08774feb4f6249e08be80832ea86e9d5">还有一种绕过方式就是之前获取参数的时候有手动URL解码一次，这里二次编码即可绕过。</div><div class="notion-text notion-block-fee29a74ee774043b21e0df9d1527cf3">sping-mvc.xml配有拦截器</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-87a4e440e3004a25985b8e620e4e2d4d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F426646ab-fd96-4cbd-b962-09e35930e9b5%2FUntitled.png?table=block&amp;id=87a4e440-e300-4a25-985b-8e620e4e2d4d&amp;t=87a4e440-e300-4a25-985b-8e620e4e2d4d&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-491070f6176f403982e16c2c624c96e8"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F46962435-0503-4f5b-9889-e4c19ef7db7f%2FUntitled.png?table=block&amp;id=491070f6-176f-4039-82e1-6c2c624c96e8&amp;t=491070f6-176f-4039-82e1-6c2c624c96e8&amp;width=705&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-4781eebcdae440a187e3065ec950e98e">不以do结尾就返回true，所以加一个分号即可</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-680bc9f76d14494b9cb9c04c68a47199"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fedb131ce-7af4-4193-8680-060b67bc179d%2FUntitled.png?table=block&amp;id=680bc9f7-6d14-494b-9cb9-c04c68a47199&amp;t=680bc9f7-6d14-494b-9cb9-c04c68a47199&amp;width=1283&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-2ba5f1545f9c41ea9ca2c3ed8beca03d" data-id="2ba5f1545f9c41ea9ca2c3ed8beca03d"><span><div id="2ba5f1545f9c41ea9ca2c3ed8beca03d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#2ba5f1545f9c41ea9ca2c3ed8beca03d" title="写WebShell"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>写WebShell</b></span></span></h2><div class="notion-text notion-block-e7880ff71c3c4f69a35b9abecb5fc1d0">由于使用的自带的mysql，默认secure_file_priv为空，所以可以into outfile写文件。读写文件的目录在mysql/bin，使用../../tomcat/webapps/gpsweb/就可以定位到web路径</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-c9812c7b2a1d4009a48dbc623b1f7e2d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F0d42c80c-3f5e-45c3-ad2e-09975eef49e1%2FUntitled.png?table=block&amp;id=c9812c7b-2a1d-4009-a48d-bc623b1f7e2d&amp;t=c9812c7b-2a1d-4009-a48d-bc623b1f7e2d&amp;width=1404&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></main></div>]]></content:encoded>
        </item>
    </channel>
</rss>