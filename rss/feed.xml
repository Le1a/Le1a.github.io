<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Le1a的菜园坝 </title>
        <link>https://www.le1a.me//</link>
        <description>一个NotionNext搭建的博客</description>
        <lastBuildDate>Wed, 14 May 2025 06:50:42 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>zh-CN</language>
        <copyright>All rights reserved 2025, Le1a</copyright>
        <item>
            <title><![CDATA[泛微ecology9 FormAction SQL注入漏洞分析]]></title>
            <link>https://www.le1a.me//article/weaver-ec9-formaction-sqli</link>
            <guid>https://www.le1a.me//article/weaver-ec9-formaction-sqli</guid>
            <pubDate>Thu, 08 May 2025 16:00:00 GMT</pubDate>
            <description><![CDATA[该文章需要密码才能查看！]]></description>
            <content:encoded><![CDATA[该文章需要密码才能查看！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Apache Tomcat RCE(CVE-2025-24813)漏洞简要分析 ]]></title>
            <link>https://www.le1a.me//article/cve-2025-24813</link>
            <guid>https://www.le1a.me//article/cve-2025-24813</guid>
            <pubDate>Mon, 10 Mar 2025 16:00:00 GMT</pubDate>
            <description><![CDATA[该文章需要密码才能查看！]]></description>
            <content:encoded><![CDATA[该文章需要密码才能查看！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[永洪BI 密码重置&任意文件写入漏洞分析]]></title>
            <link>https://www.le1a.me//article/vividime-rce</link>
            <guid>https://www.le1a.me//article/vividime-rce</guid>
            <pubDate>Sat, 22 Feb 2025 16:00:00 GMT</pubDate>
            <description><![CDATA[该文章需要密码才能查看！]]></description>
            <content:encoded><![CDATA[该文章需要密码才能查看！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[青龙面板条件竞争致密码重置漏洞分析]]></title>
            <link>https://www.le1a.me//article/race-condition-reset-passwd</link>
            <guid>https://www.le1a.me//article/race-condition-reset-passwd</guid>
            <pubDate>Tue, 17 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[该文章需要密码才能查看！]]></description>
            <content:encoded><![CDATA[该文章需要密码才能查看！]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Apache Struts2 文件上传绕过（S2-067）]]></title>
            <link>https://www.le1a.me//article/s2-067</link>
            <guid>https://www.le1a.me//article/s2-067</guid>
            <pubDate>Mon, 16 Dec 2024 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-15f7c0311dd68033bcd2f5f4a5b20434"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15f7c0311dd68082b8fbeeb4c327dc3a" data-id="15f7c0311dd68082b8fbeeb4c327dc3a"><span><div id="15f7c0311dd68082b8fbeeb4c327dc3a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15f7c0311dd68082b8fbeeb4c327dc3a" title="前言"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">前言</span></span></h2><div class="notion-text notion-block-15f7c0311dd680f4b2fad5012154c976">在S2-066中，<code class="notion-inline-code">FileUploadInterceptor</code>​采用的<code class="notion-inline-code">HttpParameters.create()</code>​创建参数，由于大小写不敏感。导致<code class="notion-inline-code">FileUploadName</code>​与<code class="notion-inline-code">fileUploadName</code>​属于不同的参数，在<code class="notion-inline-code">ParametersInterceptor#setParameters</code>​调用了<code class="notion-inline-code">acceptableParametersparams.entrySet().iterator()</code>​分别存入<code class="notion-inline-code">TreeMap</code>​中，在<code class="notion-inline-code">TreeMap</code>​中,键(key)的排序是大小写敏感的，所以大写数字会排在小写字母之前。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68000bdabfe7b8fd13789"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F2da79f04-faee-4773-852e-6a7e11c773d1%2Fimage-20241217100159-v00myrl.png?table=block&amp;id=15f7c031-1dd6-8000-bdab-fe7b8fd13789&amp;t=15f7c031-1dd6-8000-bdab-fe7b8fd13789&amp;width=692.9375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680bca671c3bc5f6ea3f1">而最后使用 OGNL 表达式调用 setter 方法对变量赋值，OGNL 在查找 setter 方法时,会自动把属性名第一个字母变成大写,然后查找 setXxx() 这样的方法。</div><div class="notion-text notion-block-15f7c0311dd68097ac51e7127d4c339e">例如,如果你有一个属性名为 <code class="notion-inline-code">name</code>​,那么 OGNL 会查找 <code class="notion-inline-code">setName()</code>​ 方法。在这个过程中,不管 <code class="notion-inline-code">name</code>​ 在 OGNL 表达式中是大写还是小写,都可以正确找到 <code class="notion-inline-code">setter</code>​ 方法。导致最后受到严格限制的<code class="notion-inline-code">FileUploadName</code>​会被<code class="notion-inline-code">fileUploadName</code>​变量覆盖。在补丁中，对<code class="notion-inline-code">HttpParameters.create()</code>​做了修改，变成了大小写不敏感了。</div><div class="notion-text notion-block-15f7c0311dd680d7abb7e57416382e38">为什么不敏感就不能利用了呢？不敏感，那么在<code class="notion-inline-code">FileUploadInterceptor</code>​中，恶意的<code class="notion-inline-code">fileUploadName</code>​是一开始初始化的，最早存入<code class="notion-inline-code">org.apache.struts2.ActionContext.parameters</code>​而在这里会被正常的<code class="notion-inline-code">FileUploadName</code>​替代（先删除后存入）。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15f7c0311dd6803588e0f5b8c836fad2" data-id="15f7c0311dd6803588e0f5b8c836fad2"><span><div id="15f7c0311dd6803588e0f5b8c836fad2" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15f7c0311dd6803588e0f5b8c836fad2" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><div class="notion-text notion-block-15f7c0311dd68015b97ffeb5674380b5">在Struts2框架中，OGNL表达式提供了一种强大的方式来访问和操作当前请求上下文中的数据。其中，<code class="notion-inline-code">top</code>​属性是一个重要的概念，它代表了当前OGNL上下文中的根对象。通过使用<code class="notion-inline-code">top</code>​属性，我们可以轻松获取当前栈中的Action对象，并利用参数绑定机制动态地修改参数值。</div><div class="notion-text notion-block-15f7c0311dd680d8adbfef30cb7f3b3f">我这里的环境上传参数为<code class="notion-inline-code">upload</code>​，变量名为<code class="notion-inline-code">uploadFileName</code>​。</div><div class="notion-text notion-block-15f7c0311dd6803c830afc67debcbe8f">通过<code class="notion-inline-code">https://www.cnblogs.com/Syria/p/6671273.html</code>​可知</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680c4a3d9e16fae41966f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:423px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fa477395a-db8f-4eea-90ed-df3d51c266a1%2Fimage-20241216235000-t6zzoa8.png?table=block&amp;id=15f7c031-1dd6-80c4-a3d9-e16fae41966f&amp;t=15f7c031-1dd6-80c4-a3d9-e16fae41966f&amp;width=423&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd6802292eaec262eeb9e53">使用<code class="notion-inline-code">top.uploadFileName</code>​可以获取栈顶对象的<code class="notion-inline-code">uploadFileName</code>​变量，并动态修改值。</div><div class="notion-text notion-block-15f7c0311dd680709dd2ceb2cb6ec241">断点打在<code class="notion-inline-code">FileUploadInterceptor#intercept</code>​，查看是如何获取的<code class="notion-inline-code">FileName</code>​</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd6803abdb2c4dad19c1c30"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6b9a0df0-1a43-47b9-9091-a90d19322ed2%2F3a2aa5d4416bc5fcb5bf2f1cf69bfa79.png?table=block&amp;id=15f7c031-1dd6-803a-bdb2-c4dad19c1c30&amp;t=15f7c031-1dd6-803a-bdb2-c4dad19c1c30&amp;width=692.921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd68047a336e4f2d3e05fcf">这里继续跟进<code class="notion-inline-code">multiWrapper.getFileNames</code>​</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680e79ef2ee4cc2178459"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F27485e8f-a26d-4569-aa5f-183ee3556c32%2F0c4f9ae2fe44b6ae4c6b75e4078652d7.png?table=block&amp;id=15f7c031-1dd6-80e7-9ef2-ee4cc2178459&amp;t=15f7c031-1dd6-80e7-9ef2-ee4cc2178459&amp;width=692.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680d7ba19fa0c14d5d0ef"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Ffd007b11-af6b-49fb-a7f7-8ee4ffc06ad9%2Fbf64676fdaccca166e62e0641b618301.png?table=block&amp;id=15f7c031-1dd6-80d7-ba19-fa0c14d5d0ef&amp;t=15f7c031-1dd6-80d7-ba19-fa0c14d5d0ef&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd68027ae79fd787d781acc">这里是从最后一个正斜杠或反斜杠的位置往后截取文件名，限制了路径穿越。</div><div class="notion-text notion-block-15f7c0311dd6808f9ef2f15e14348f25">当我们构造<code class="notion-inline-code">top.uploadFileName=../../webapps/ROOT/le1a.jsp</code>​时，这里能够获取到一个<code class="notion-inline-code">File</code>​，一个<code class="notion-inline-code">params</code>​</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68068b854f105009cd714"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F95da42fe-b350-4e15-a908-ede4967ccee3%2Fff5e95e65d96f385799c61e672b0f437.png?table=block&amp;id=15f7c031-1dd6-8068-b854-f105009cd714&amp;t=15f7c031-1dd6-8068-b854-f105009cd714&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd6802fb502cc1a4e9a2844">后面正常构造上传对象，把该<code class="notion-inline-code">文件对象的参数</code>​加入到最开始创建的<code class="notion-inline-code">ActionContext ac = invocation.getInvocationContext();</code>​中，该<code class="notion-inline-code">ac</code>​是 ActionContext 对象。ActionContext 是一个存储与当前请求和处理相关上下文信息的容器。</div><div class="notion-text notion-block-15f7c0311dd680aa80ccf7c9e8941350">此时<code class="notion-inline-code">ac.getParameters()</code>​包含以下四种参数。</div><blockquote class="notion-quote notion-block-15f7c0311dd680ab9de1d373f22b4bcb"><div>此时是HashMap所以是无序的，但其实最后还是用了TreeMap来存储acceptableParameters​，所以最终还是有序的。</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680078bb5c1dec341c96e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fec163886-6b95-44a0-b51e-a8ea26820027%2F2ffa59291c63a70c1c7899ac14ff53fa.png?table=block&amp;id=15f7c031-1dd6-8007-8bb5-c1dec341c96e&amp;t=15f7c031-1dd6-8007-8bb5-c1dec341c96e&amp;width=692.9375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd6800eac78d74fac589489">后面在<code class="notion-inline-code">ParametersInterceptor#doIntercept</code>​中获取所有参数，然后调用<code class="notion-inline-code">setParameters</code>​赋值</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680338974ff92b259f67e"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fddb76a4e-c99b-4cb2-b833-f9af902d0cfb%2F56acf52f85ac1197fae1a23d1a004f6d.png?table=block&amp;id=15f7c031-1dd6-8033-8974-ff92b259f67e&amp;t=15f7c031-1dd6-8033-8974-ff92b259f67e&amp;width=692.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680409edbee6c187c6dc2">继续跟进至<code class="notion-inline-code">ParametersInterceptor#setParameters</code>​这里使用<code class="notion-inline-code">params</code>​暂存了一下参数</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680f88381d4e833b8ecb1"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fea19bb07-c861-45e8-b023-c7e646f55aa1%2Fd4c00c64ff851d8ec5e3d2a93f2839b3.png?table=block&amp;id=15f7c031-1dd6-80f8-8381-d4e833b8ecb1&amp;t=15f7c031-1dd6-80f8-8381-d4e833b8ecb1&amp;width=692.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680f6acabc696ae58dc7c">后面还是由<code class="notion-inline-code">acceptableParameters</code>​存储参数，可以看到<code class="notion-inline-code">top</code>​始终都是处在最后的。</div><blockquote class="notion-quote notion-block-15f7c0311dd680eba706c90ff9ff559b"><div>当然这里上传文件的name还是需要首字母大写，因为u在t后面，所以最后在TreeMap中uplaodFileName会覆盖top.uploadFileName</div></blockquote><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680fb8f97db658505e270"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F3a592652-cd72-4ba2-b5ce-5ae5503437c7%2F603ed21e29d43e485ff884c36bf6ed85.png?table=block&amp;id=15f7c031-1dd6-80fb-8f97-db658505e270&amp;t=15f7c031-1dd6-80fb-8f97-db658505e270&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680059613d500d96e99a7"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F9cbb1fbc-d1e7-43a9-b0b8-2b94310f9c3b%2Fa2de77dba44aeecda7206bcb1eee5026.png?table=block&amp;id=15f7c031-1dd6-8005-9613-d500d96e99a7&amp;t=15f7c031-1dd6-8005-9613-d500d96e99a7&amp;width=692.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd68013a278f33fd9ef989c">这里重点关注<code class="notion-inline-code">top.uploadFileName</code>​的赋值情况</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680d2b729ddf6ff4f4e85"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6e60875f-5fdb-4b06-83eb-9e019180a2d0%2F3e3d65aeb01b37fe8d43ebc8e9305c17.png?table=block&amp;id=15f7c031-1dd6-80d2-b729-ddf6ff4f4e85&amp;t=15f7c031-1dd6-80d2-b729-ddf6ff4f4e85&amp;width=692.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68081b720cd9c0f09fdff"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fb8bb411a-7c9c-42d3-9ae5-f4d162239310%2Fba7cde68a68efb26c5abdeb8366912a7.png?table=block&amp;id=15f7c031-1dd6-8081-b720-cd9c0f09fdff&amp;t=15f7c031-1dd6-8081-b720-cd9c0f09fdff&amp;width=692.90625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd6808491a0cb97e1062caf"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F2e6f77d0-7ca6-49ef-8ef7-ba17ddafdf6d%2F96d6a18b2d7e98d6ec3619376dc77168.png?table=block&amp;id=15f7c031-1dd6-8084-91a0-cb97e1062caf&amp;t=15f7c031-1dd6-8084-91a0-cb97e1062caf&amp;width=692.96875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68096a5c6c4e9890c3d76"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F65fbbea6-92c1-4c3c-ae0a-218819495d63%2Fa0cd03ea998e4cf5f27f2458cc38a83b.png?table=block&amp;id=15f7c031-1dd6-8096-a5c6-c4e9890c3d76&amp;t=15f7c031-1dd6-8096-a5c6-c4e9890c3d76&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680ddaf7cf7ecd2e06562"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fc9b73f9c-43e8-4955-be11-241dfb50cdf5%2Fc63c2fde0b4a0058650edb9f138b60f2.png?table=block&amp;id=15f7c031-1dd6-80dd-af7c-f7ecd2e06562&amp;t=15f7c031-1dd6-80dd-af7c-f7ecd2e06562&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd68003a340cf92b38ecaaa">此时根对象为<code class="notion-inline-code">CompoundRoot</code>​，根对象的栈顶对象为此次访问的<code class="notion-inline-code">Upload</code>​对象。那么如何访问到这个<code class="notion-inline-code">n[0]</code>​呢？</div><div class="notion-text notion-block-15f7c0311dd680aab93acbe718df1092">这里继续跟进</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd6801bb432d2d61cd8197f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F7f93d536-59e6-46b5-b73f-eac8d88d10a1%2Ff44c5877be4e42d380e1a3e67c42fb4a.png?table=block&amp;id=15f7c031-1dd6-801b-b432-d2d61cd8197f&amp;t=15f7c031-1dd6-801b-b432-d2d61cd8197f&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd6803cb843dac782efab3b">此时<code class="notion-inline-code">target</code>​还是<code class="notion-inline-code">root根对象</code>​，继续跟进</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680d3b249e51977b97d2c"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fe1f107a1-9c47-4a09-872c-1545151f3ffd%2Fd2b34b96e848c92924b2927719d9d133.png?table=block&amp;id=15f7c031-1dd6-80d3-b249-e51977b97d2c&amp;t=15f7c031-1dd6-80d3-b249-e51977b97d2c&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680b8a371d9d4250f2631">这里经过若干次堆栈后，进入到<code class="notion-inline-code">ASTProperty#getValueBody</code>​</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68094bfdbeda6c6576dab"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F5be86c41-f323-4b41-a582-c1df9035ec59%2Fb9197ad4444e51d39a416bb68a038c1e.png?table=block&amp;id=15f7c031-1dd6-8094-bfdb-eda6c6576dab&amp;t=15f7c031-1dd6-8094-bfdb-eda6c6576dab&amp;width=692.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd6807c8c2af966e62e6413"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F20702bee-0ec4-42e0-a836-533d5bc4f9b8%2F784a06dfee2e3691728b10783cd3c54c.png?table=block&amp;id=15f7c031-1dd6-807c-8c2a-f966e62e6413&amp;t=15f7c031-1dd6-807c-8c2a-f966e62e6413&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd680e1b426ea7035a24f1d"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F9b5d4d55-a727-4e0e-9e09-a70a092882f0%2F6beb8b660389c30fdbb8a4764d144fa2.png?table=block&amp;id=15f7c031-1dd6-80e1-b426-ea7035a24f1d&amp;t=15f7c031-1dd6-80e1-b426-ea7035a24f1d&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680958c5fce542bc10cc0">这里为参数的<code class="notion-inline-code">_children[0]</code>​为<code class="notion-inline-code">top</code>​的时候，即可获取栈顶对象。</div><div class="notion-text notion-block-15f7c0311dd680dda175d36a35b0cace">这里设置的<code class="notion-inline-code">Upload</code>​对象的<code class="notion-inline-code">uploadFileName</code>​变量值为<code class="notion-inline-code">../../webapps/ROOT/le1a.jsp</code>​</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68081bd7ec280aa442071"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:634px;max-width:100%;flex-direction:column"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F0d0df1de-653f-43c9-8fb1-5750b3d8e631%2F6fdd521de6795756bc676bf231be6e4e.png?table=block&amp;id=15f7c031-1dd6-8081-bd7e-c280aa442071&amp;t=15f7c031-1dd6-8081-bd7e-c280aa442071&amp;width=634&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15f7c0311dd680c19a3dff9eceaa661f">可以看到此时已经成功修改<code class="notion-inline-code">uploadFileName</code>​变量。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15f7c0311dd6801ca96bff5bde09ae7e" data-id="15f7c0311dd6801ca96bff5bde09ae7e"><span><div id="15f7c0311dd6801ca96bff5bde09ae7e" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15f7c0311dd6801ca96bff5bde09ae7e" title="最终构造"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title">最终构造</span></span></h2><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15f7c0311dd68010ae01f9fa7d92aa69"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fff5cfb35-601b-4ac6-b9e0-be550cd25977%2Fimage.png?table=block&amp;id=15f7c031-1dd6-8010-ae01-f9fa7d92aa69&amp;t=15f7c031-1dd6-8010-ae01-f9fa7d92aa69&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></main></div>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Apache Struts2 文件上传分析(S2-066)]]></title>
            <link>https://www.le1a.me//article/s2-066</link>
            <guid>https://www.le1a.me//article/s2-066</guid>
            <pubDate>Sun, 10 Dec 2023 00:00:00 GMT</pubDate>
            <content:encoded><![CDATA[<div id="notion-article" class="mx-auto overflow-hidden "><main class="notion light-mode notion-page notion-block-15e7c0311dd68029b386db6142b650cf"><div class="notion-viewport"></div><div class="notion-collection-page-properties"></div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15e7c0311dd680a99ea4c8ec36a7b395" data-id="15e7c0311dd680a99ea4c8ec36a7b395"><span><div id="15e7c0311dd680a99ea4c8ec36a7b395" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15e7c0311dd680a99ea4c8ec36a7b395" title="漏洞描述"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞描述</b></span></span></h2><div class="notion-text notion-block-15e7c0311dd68065a4a3ca722be2b374">Apache Struts2 是一个开源的 Java Web 应用程序开发框架，旨在帮助开发人员构建灵活、可维护和可扩展的企业级Web应用程序。近日，微步漏洞团队监测到官方披露 CVE-2023-50164 Apache Struts 文件上传漏洞。经过分析和研判，该漏洞利用难度低，攻击者可以通过污染相关上传参数导致目录遍历，在具体代码环境中可能导致上传 Webshell，执行任意代码，建议尽快修复。</div><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15e7c0311dd68036aa32c606f431779a" data-id="15e7c0311dd68036aa32c606f431779a"><span><div id="15e7c0311dd68036aa32c606f431779a" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15e7c0311dd68036aa32c606f431779a" title="漏洞分析"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞分析</b></span></span></h2><div class="notion-text notion-block-15e7c0311dd68096838ff29349c27843">Struts2的默认配置通常包含<code class="notion-inline-code">FileUploadInterceptor</code>，该拦截器负责处理文件上传，并将文件信息封装到相应的Action属性中。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-15e7c0311dd680c5bfc9eeb9e1a0c08d" data-id="15e7c0311dd680c5bfc9eeb9e1a0c08d"><span><div id="15e7c0311dd680c5bfc9eeb9e1a0c08d" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15e7c0311dd680c5bfc9eeb9e1a0c08d" title="正常文件上传"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>正常文件上传</b></span></span></h3><div class="notion-text notion-block-15e7c0311dd680279bf6f5d1cfc1c264">当我们使用默认配置上传文件，尝试路径穿越将文件上传至任意目录，测试发现无法路径穿越到任意目录</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd68006a1ced0c6f3f98ff6"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fa4233115-ee72-4e11-a84c-f25e693c6a4d%2Fec9c9e7daed0347e331a86ac08564b17.png?table=block&amp;id=15e7c031-1dd6-8006-a1ce-d0c6f3f98ff6&amp;t=15e7c031-1dd6-8006-a1ce-d0c6f3f98ff6&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd68031a56ce7f9f8aed586">我们在<code class="notion-inline-code">FileUploadInterceptor#intercept()</code>打下断点，跟进代码</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680c78b43f95b43f41d2f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fe399b184-abdd-411d-a170-8f1b4b96b589%2Fimage.png?table=block&amp;id=15e7c031-1dd6-80c7-8b43-f95b43f41d2f&amp;t=15e7c031-1dd6-80c7-8b43-f95b43f41d2f&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd6807485e1f77413e04ee6">这里跟进<code class="notion-inline-code">multiWrapper.getFileNames()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680b4af75d1b062e0d1f4"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Ff4f20e40-d64f-4738-8a10-13c5c3894035%2Fimage.png?table=block&amp;id=15e7c031-1dd6-80b4-af75-d1b062e0d1f4&amp;t=15e7c031-1dd6-80b4-af75-d1b062e0d1f4&amp;width=2152&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd6807da507c20224ddd565">这里继续跟进<code class="notion-inline-code">getCanonicalName()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680918dd7d28c5c10987f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F7b9bcde8-352f-4e6a-a713-085f43ab2fcc%2F6d0f9c2fc23d17fe158dffc8b4049f80.png?table=block&amp;id=15e7c031-1dd6-8091-8dd7-d28c5c10987f&amp;t=15e7c031-1dd6-8091-8dd7-d28c5c10987f&amp;width=2204&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd68092b3c9d6a43b13426e">发现获取文件名是通过substring方法进行截取的，通过../../进行目录穿越是不行的。</div><h3 class="notion-h notion-h2 notion-h-indent-1 notion-block-15e7c0311dd68028903ef5311bf87889" data-id="15e7c0311dd68028903ef5311bf87889"><span><div id="15e7c0311dd68028903ef5311bf87889" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15e7c0311dd68028903ef5311bf87889" title="参数污染"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>参数污染</b></span></span></h3><div class="notion-text notion-block-15e7c0311dd680af9306c5b145868f95">回到<code class="notion-inline-code">FileUploadInterceptor#intercept()</code>中，在获取文件名后生成了两个变量<code class="notion-inline-code">contentTypeName</code>和<code class="notion-inline-code">fileNameName</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680c8af65fdaea268f039"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fb291eae3-f0b9-4fb0-aaeb-46fd8cd65d29%2F33c408a0d4f8890c56c299e057783c87.png?table=block&amp;id=15e7c031-1dd6-80c8-af65-fdaea268f039&amp;t=15e7c031-1dd6-80c8-af65-fdaea268f039&amp;width=692.9765625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680a8b1e4f71790f91473"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2Fb214d3e2-6f34-49ce-9714-cdf6c9fc181b%2Fimage.png?table=block&amp;id=15e7c031-1dd6-80a8-b1e4-f71790f91473&amp;t=15e7c031-1dd6-80a8-b1e4-f71790f91473&amp;width=2320&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><ol start="1" class="notion-list notion-list-numbered notion-block-15e7c0311dd6801fa954e16ce230b468"><li>检查每一个文件是否可以被接受(根据配置规则检查,默认全部接受)</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-15e7c0311dd68084aa7fe1b3a0a0aa20"><li>对可以接受的文件,将其文件名、内容类型和文件内容分别保存到三个List中(acceptedFileNames、acceptedContentTypes和acceptedFiles)</li></ol><ol start="3" class="notion-list notion-list-numbered notion-block-15e7c0311dd6806f9949e7cebd06d781"><li>如果接受的文件列表不为空,则将这三个List分别封装成Parameter,并存入参数Map中:</li><ol class="notion-list notion-list-numbered notion-block-15e7c0311dd6806f9949e7cebd06d781"><ul class="notion-list notion-list-disc notion-block-15e7c0311dd680eea366cbc9dbc64c15"><li>文件内容列表acceptedFiles 封装成参数 inputName</li></ul><ul class="notion-list notion-list-disc notion-block-15e7c0311dd680b7983bc9bd324d78c0"><li>内容类型列表 acceptedContentTypes 封装成参数 contentTypeName</li></ul><ul class="notion-list notion-list-disc notion-block-15e7c0311dd680e783d7ccf6711d3d8c"><li>文件名列表 acceptedFileNames 封装成参数 fileNameName</li></ul></ol></ol><ol start="4" class="notion-list notion-list-numbered notion-block-15e7c0311dd680588d06df413dc21074"><li>最后将这个参数Map 设置到上下文的Parameters中，在<code class="notion-inline-code">ParametersInterceptor#setParameters()</code>中对这些参数赋值</li></ol><div class="notion-text notion-block-15e7c0311dd68089adf3ca4474b3c5db">跟进<code class="notion-inline-code">ParametersInterceptor#setParameters()</code></div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680c1919ad9c8a3220941"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F5e69239c-1491-4701-ba36-0b78457037be%2Fimage.png?table=block&amp;id=15e7c031-1dd6-80c1-919a-d9c8a3220941&amp;t=15e7c031-1dd6-80c1-919a-d9c8a3220941&amp;width=692.9765625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd6802097c2e8a49e6cd369">这里采用<code class="notion-inline-code">HttpParameters.create()</code>创建参数</div><div class="notion-text notion-block-15e7c0311dd680d9a219c54e6c9436ef">而在新版本中，对HttpParameters做出了修改，变成了大小写不敏感，而在存在漏洞的版本中是大小写敏感的。</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680c49d8acc0d3825a173"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F7fba75d4-4c8d-4301-b5b4-6693f22785cc%2Fimage.png?table=block&amp;id=15e7c031-1dd6-80c4-9d8a-cc0d3825a173&amp;t=15e7c031-1dd6-80c4-9d8a-cc0d3825a173&amp;width=692.9921875&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd680c28aeac5163dc90278">这导致了这里FileFileName和fileFileName会是不同的参数，都会在<code class="notion-inline-code">ParametersInterceptor#setParameters()</code>赋值</div><div class="notion-text notion-block-15e7c0311dd680feaa3dd46d07481874">而后面采用了使用 OGNL 表达式调用 setter 方法对变量赋值</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd68091ae3edb358a22566f"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F8ef04ba5-f2c7-4e1d-bb89-61b087e5e5af%2F54fbd592be9b35aac7b0119859fcca97.png?table=block&amp;id=15e7c031-1dd6-8091-ae3e-db358a22566f&amp;t=15e7c031-1dd6-8091-ae3e-db358a22566f&amp;width=692.953125&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><div class="notion-text notion-block-15e7c0311dd68096b73dc5a585c531a6">OGNL 在查找 setter 方法时,会自动把属性名第一个字母变成大写,然后查找 setXxx() 这样的方法。</div><div class="notion-text notion-block-15e7c0311dd680da8c8ecd62bcf4447a">例如,如果你有一个属性名为 &quot;name&quot;,那么 OGNL 会查找 setName() 方法。在这个过程中,不管 name 在 OGNL 表达式中是大写还是小写,都可以正确找到 setter 方法。所以在 Struts 2 的 OGNL 表达式中,属性名的首字母大小写可以不敏感。</div><div class="notion-text notion-block-15e7c0311dd680e3a7c2caea96fc8777">所以当我手动传入一个fileFileName参数，在这里也会被赋值，fileFileName和FileFileName参数会被自动映射到同一个参数上。调用相应的get方法获取值时,会取得最后赋值的那个参数的值。</div><div class="notion-text notion-block-15e7c0311dd680c98dabee10559aea73">那么这两个参数的赋值先后顺序呢？如果我们手动传入的参数会后赋值，就可以覆盖掉前面的参数，造成参数污染。</div><div class="notion-text notion-block-15e7c0311dd680198402e3dee41a6b8b">在TreeMap中,键(key)的排序是大小写敏感的。默认的排序规则如下:</div><ol start="1" class="notion-list notion-list-numbered notion-block-15e7c0311dd6807b825ce76b371f89cb"><li>大写字母会排在小写字母之前</li></ol><ol start="2" class="notion-list notion-list-numbered notion-block-15e7c0311dd6808ea277f774dff577b9"><li>数字会排在字母之前</li></ol><div class="notion-text notion-block-15e7c0311dd68029a190c94e03817a5a">所以当文件上传的name构造为大写开头，手动传入的污染参数构造为小写开头即可</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680ad832bd5ea80857d64"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F5a76b1c8-db45-426b-a806-99a12f0fd5a0%2Fd98de55d759ab6ff34c391c6d0f96048.png?table=block&amp;id=15e7c031-1dd6-80ad-832b-d5ea80857d64&amp;t=15e7c031-1dd6-80ad-832b-d5ea80857d64&amp;width=692.9765625&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure><h2 class="notion-h notion-h1 notion-h-indent-0 notion-block-15e7c0311dd6800b8d2ce6b33c246975" data-id="15e7c0311dd6800b8d2ce6b33c246975"><span><div id="15e7c0311dd6800b8d2ce6b33c246975" class="notion-header-anchor"></div><a class="notion-hash-link" href="#15e7c0311dd6800b8d2ce6b33c246975" title="漏洞复现"><svg viewBox="0 0 16 16" width="16" height="16"><path fill-rule="evenodd" d="M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z"></path></svg></a><span class="notion-h-title"><b>漏洞复现</b></span></span></h2><div class="notion-text notion-block-15e7c0311dd680439bf9deb7614197fa">构造数据包：</div><div class="notion-text notion-block-15e7c0311dd680c68fc2e8876d3a9dc2">文件上传成功，成功路径穿越到webapps目录下！</div><figure class="notion-asset-wrapper notion-asset-wrapper-image notion-block-15e7c0311dd680ae833ff739f6972cd1"><div style="position:relative;display:flex;justify-content:center;align-self:center;width:100%;max-width:100%;flex-direction:column;height:100%"><img style="object-fit:cover" src="https://www.notion.so/image/https%3A%2F%2Fprod-files-secure.s3.us-west-2.amazonaws.com%2F447b58d6-98ee-426c-9daf-e7699c957c9f%2F6f84fd39-8400-4dbd-9f35-55789d298ed7%2Fc5100ec9719bf09d81af51e8a8ecd590.png?table=block&amp;id=15e7c031-1dd6-80ae-833f-f739f6972cd1&amp;t=15e7c031-1dd6-80ae-833f-f739f6972cd1&amp;width=692.984375&amp;cache=v2" alt="notion image" loading="lazy" decoding="async"/></div></figure></main></div>]]></content:encoded>
        </item>
    </channel>
</rss>